library(MASS)
library(ggplot2)
library(GGally)
library(rio)
library(leaps)
library(car)
library(dplyr)
setwd("C:/Users/teobo/Desktop/3_6_Inferenza/ProgettoR_Latex")
Data=import("archive/TEH_World_Happiness_2019_Imputed.xlsx")
Data=import(C:/Users/teobo/Desktop/3_6_Inferenza/ProgettoR_Latex/TEH_World_Happiness_2019_Imputed.xlsx")
Data=import("C:/Users/teobo/Desktop/3_6_Inferenza/ProgettoR_Latex/TEH_World_Happiness_2019_Imputed.xlsx")
Data$Continent=NULL
head(Data)
summary(Data)
str(Data)
Data$Country=NULL # = alla mia y
Data$Year=NULL #irrilevante
Data$Happiness.rank=NULL
ggpairs(data = Data, title ="Relationships between predictors & response",
lower = list(continuous=wrap("points", alpha = 0.5, size=0.1)))
g_prova = lm(Happiness.Score ~ ., data=Data)
summary(g_prova)
shapiro.test(g_prova$residuals)
plot(g_prova, which=1, pch=16)
plot(g_prova, which=2, pch=16)
influencePlot(g_prova, id.method = "identify", main = "influential Plot",
sub = "Circle size is proportial to Cook's Distance")
Data=Data[-c(148,149,152),]
g = lm(Happiness.Score ~ ., data=Data)
summary(g)
shapiro.test(g$residuals)
plot(g, which=1, pch=16)
plot(g, which=2, pch=16)
influencePlot(g, id.method = "identify", main = "influential Plot",
sub = "Circle size is proportial to Cook's Distance")
g2 = update(g, . ~ . - Generosity) #Statisticamente irrilevante
influencePlot(g, id.method = "identify", main = "influential Plot",
sub = "Circle size is proportial to Cook's Distance")
g2 = update(g, . ~ . - Generosity) #Statisticamente irrilevante
summary(g2)
shapiro.test(g2$residuals)
g3 = update(g2, . ~ . - Healthy.life) #Poco rilevante
shapiro.test(g2$residuals)
summary(g2)
shapiro.test(g2$residuals)
g3 = update(g2, . ~ . - Healthy.life) #Poco rilevante
summary(g3)
Data$Healty.Life=NULL
ggpairs(data = Data, title ="Relationships between predictors & response",
lower = list(continuous=wrap("points", alpha = 0.5, size=0.1)))
Data$Healty.life=NULL
ggpairs(data = Data, title ="Relationships between predictors & response",
lower = list(continuous=wrap("points", alpha = 0.5, size=0.1)))
Data$Generosity=NULL
Data$Healty.life=NULL
ggpairs(data = Data, title ="Relationships between predictors & response",
lower = list(continuous=wrap("points", alpha = 0.5, size=0.1)))
Data$Healthy.life=NULL
ggpairs(data = Data, title ="Relationships between predictors & response",
lower = list(continuous=wrap("points", alpha = 0.5, size=0.1)))
summary(g3)
g4 = update(g3, . ~ . - Corruption) #Non super rilevante
summary(g4)
View(Data)
Data=import("C:/Users/teobo/Desktop/3_6_Inferenza/ProgettoR_Latex/TEH_World_Happiness_2019_Imputed.xlsx")
View(Data)
Data2=import("C:/Users/teobo/Desktop/3_6_Inferenza/ProgettoR_Latex/TEH_World_Happiness_2019_Imputed.xlsx")
table(Data2$Continent)
Data2=Data2[Data2$Continent != "Oceania",]
Data2$Continent=as.factor(Data2$Continent)
plot(Data2$Continent, Data2$Happiness.Score)
fit = aov(Data2$Happiness.Score ~ Data2$Continent)
summary(fit)
tapply(Data2$Happiness.Score , Data2$Continent, function( x ) ( shapiro.test( x )$p ) )
Data2=Data2[Data2$Country != "Haiti",]
Data2=Data2[Data2$Country != "Venezuela",]
tapply(Data2$Happiness.Score , Data2$Continent, function( x ) ( shapiro.test( x )$p ) )
plot(Data2$Continent, Data2$Happiness.Score)
tapply(Data2$Happiness.Score , Data2$Continent, function( x ) ( shapiro.test( x )$p ) )
plot(Data2$Continent, Data2$Happiness.Score)
Data2=import("C:/Users/teobo/Desktop/3_6_Inferenza/ProgettoR_Latex/TEH_World_Happiness_2019_Imputed.xlsx")
table(Data2$Continent)
Data2=Data2[Data2$Continent != "Oceania",]
Data2$Continent=as.factor(Data2$Continent)
plot(Data2$Continent, Data2$Happiness.Score)
Data2=import("C:/Users/teobo/Desktop/3_6_Inferenza/ProgettoR_Latex/TEH_World_Happiness_2019_Imputed.xlsx")
table(Data2$Continent)
Data2=import("C:/Users/teobo/Desktop/3_6_Inferenza/ProgettoR_Latex/TEH_World_Happiness_2019_Imputed.xlsx")
table(Data2$Continent)
Data2=Data2[Data2$Continent != "Oceania",]
Data2$Continent=as.factor(Data2$Continent)
plot(Data2$Continent, Data2$Happiness.Score)
fit = aov(Data2$Happiness.Score ~ Data2$Continent)
summary(fit)
tapply(Data2$Happiness.Score , Data2$Continent, function( x ) ( shapiro.test( x )$p ) )
Data2=Data2[Data2$Country != "Haiti",]
Data2=Data2[Data2$Country != "Venezuela",]
tapply(Data2$Happiness.Score , Data2$Continent, function( x ) ( shapiro.test( x )$p ) )
plot(Data2$Continent, Data2$Happiness.Score)
bartlett.test(Data2$Happiness.Score,Data2$Continent)
g = lm(Happiness.Score ~ Continent, data=Data2)
b = boxcox( g, lambda = seq(0.35,1.5,by=0.01) )
best = b$x[ which.max( b$y ) ]
best
bartlett.test(Data2$Happiness.Score^best,Data2$Continent)
Data3=import("C:/Users/teobo/Desktop/3_6_Inferenza/ProgettoR_Latex/TEH_World_Happiness_2019_Imputed copia.xlsx")
table(Data3$Continent)
Data3=Data3[Data3$Continent != "Oceania",]
Data3$Continent=as.factor(Data3$Continent)
tapply(Data3$Happiness.Score , Data3$Continent, function( x ) ( shapiro.test( x )$p ) )
plot(Data3$Continent, Data3$Happiness.Score)
Data3=Data3[Data3$Country != "Haiti",]
#Data3=Data3[Data3$Country != "Venezuela",]
#Data3=Data3[Data3$Country != "Canada",]
#Data3=Data3[Data3$Country != "Costa Rica",]
tapply(Data3$Happiness.Score , Data3$Continent, function( x ) ( shapiro.test( x )$p ) )
plot(Data3$Continent, Data3$Happiness.Score)
bartlett.test(Data3$Happiness.Score,Data3$Continent)
g = lm(Happiness.Score ~ Continent, data=Data3)
b = boxcox( g, lambda = seq(0.3,1.5,by=0.01) )
best = b$x[ which.max( b$y ) ]
best
bartlett.test(Data3$Happiness.Score^best,Data3$Continent)
summary(g)
Data4=import("C:/Users/teobo/Desktop/3_6_Inferenza/ProgettoR_Latex/TEH_World_Happiness_2019_Imputed copia.xlsx")
library(MASS)
library(ggplot2)
library(GGally)
library(rio)
library(leaps)
library(car)
library(dplyr)
Data3=import("archive/TEH_World_Happiness_2019_Imputed copia.xlsx")
Data3=import("C:/Users/teobo/Desktop/3_6_Inferenza/ProgettoR_Latex/TEH_World_Happiness_2019_Imputed copia.xlsx")
table(Data3$Continent)
Data3=Data3[Data3$Continent != "Oceania",]
Data3$Continent=as.factor(Data3$Continent)
tapply(Data3$Happiness.Score , Data3$Continent, function( x ) ( shapiro.test( x )$p ) )
plot(Data3$Continent, Data3$Happiness.Score)
Data3=Data3[Data3$Country != "Haiti",]
#Data3=Data3[Data3$Country != "Venezuela",]
#Data3=Data3[Data3$Country != "Canada",]
#Data3=Data3[Data3$Country != "Costa Rica",]
tapply(Data3$Happiness.Score , Data3$Continent, function( x ) ( shapiro.test( x )$p ) )
plot(Data3$Continent, Data3$Happiness.Score)
bartlett.test(Data3$Happiness.Score,Data3$Continent)
g = lm(Happiness.Score ~ Continent, data=Data3)
b = boxcox( g, lambda = seq(0.3,1.5,by=0.01) )
best = b$x[ which.max( b$y ) ]
best
bartlett.test(Data3$Happiness.Score^best,Data3$Continent)
summary(g)
Data4=import("C:/Users/teobo/Desktop/3_6_Inferenza/ProgettoR_Latex/TEH_World_Happiness_2019_Imputed copia.xlsx")
Data4=Data4[Data4$Continent != "Oceania",]
Data4=Data4[Data4$Continent != "Africa",]
table(Data4$Continent)
Data4$Continent=as.factor(Data4$Continent)
tapply(Data4$Happiness.Score , Data4$Continent, function( x ) ( shapiro.test( x )$p ) )
plot(Data4$Continent, Data4$Happiness.Score)
Data4=Data4[Data4$Country != "Haiti",]
tapply(Data4$Happiness.Score , Data4$Continent, function( x ) ( shapiro.test( x )$p ) )
plot(Data4$Continent, Data4$Happiness.Score)
bartlett.test(Data4$Happiness.Score,Data4$Continent)
fit = aov(Data4$Happiness.Score ~ Data4$Continent)
summary(fit)
Data4$Continent=relevel(Data4$Continent, ref="Asia")
g = lm(Happiness.Score ~ Continent, data=Data4)
summary(g)
Data5=import("C:/Users/teobo/Desktop/3_6_Inferenza/ProgettoR_Latex/EH_World_Happiness_2019_Imputed copia.xlsx")
Data5=import("C:/Users/teobo/Desktop/3_6_Inferenza/ProgettoR_Latex/EH_World_Happiness_2019_Imputed copia.xlsx")
Data5=import("C:/Users/teobo/Desktop/3_6_Inferenza/ProgettoR_Latex/TEH_World_Happiness_2019_Imputed copia.xlsx")
Data5=Data5[Data5$Continent != "Oceania",]
Data5=Data5[Data5$Continent != "Africa",]
Data5=Data5[Data5$Continent != "Asia",]
table(Data5$Continent)
Data5$Continent=as.factor(Data5$Continent)
tapply(Data5$Happiness.Score , Data5$Continent, function( x ) ( shapiro.test( x )$p ) )
plot(Data5$Continent, Data5$Happiness.Score)
Data5=Data5[Data5$Country != "Haiti",]
tapply(Data5$Happiness.Score , Data5$Continent, function( x ) ( shapiro.test( x )$p ) )
plot(Data5$Continent, Data5$Happiness.Score)
bartlett.test(Data5$Happiness.Score,Data5$Continent)
fit = aov(Data5$Happiness.Score ~ Data5$Continent)
summary(fit)
g = lm(Happiness.Score ~ Continent, data=Data5)
summary(g)
library(MASS)
library(ggplot2)
library(GGally)
library(rio)
library(leaps)
library(car)
library(dplyr)
####### 1 #######
Data=import("C:/Users/teobo/Desktop/3_6_Inferenza/ProgettoR_Latex/TEH_World_Happiness_2019_Imputed.xlsx")
Data$Continent=NULL
head(Data)
summary(Data)
str(Data)
Data$Country=NULL # = alla mia y
Data$Year=NULL #irrilevante
Data$Happiness.rank=NULL
ggpairs(data = Data, title ="Relationships between predictors & response",
lower = list(continuous=wrap("points", alpha = 0.5, size=0.1)))
####### 2 #######
g_prova = lm(Happiness.Score ~ ., data=Data)
summary(g_prova)
shapiro.test(g_prova$residuals)
plot(g_prova, which=1, pch=16)
plot(g_prova, which=2, pch=16)
influencePlot(g_prova, id.method = "identify", main = "influential Plot",
sub = "Circle size is proportial to Cook's Distance")
Data=Data[-c(148,149,152),]
g = lm(Happiness.Score ~ ., data=Data)
summary(g)
shapiro.test(g$residuals)
plot(g, which=1, pch=16)
plot(g, which=2, pch=16)
influencePlot(g, id.method = "identify", main = "influential Plot",
sub = "Circle size is proportial to Cook's Distance") # fors√©meglio non fare vedere
####### 3 #######
library(MASS)
library(ggplot2)
library(GGally)
library(rio)
library(leaps)
library(car)
library(dplyr)
####### 1 #######
Data=import("C:/Users/teobo/Desktop/3_6_Inferenza/ProgettoR_Latex/TEH_World_Happiness_2019_Imputed.xlsx")
Data$Continent=NULL
head(Data)
summary(Data)
str(Data)
Data$Country=NULL # = alla mia y
Data$Year=NULL #irrilevante
Data$Happiness.rank=NULL
ggpairs(data = Data, title ="Relationships between predictors & response",
lower = list(continuous=wrap("points", alpha = 0.5, size=0.1)))
####### 2 #######
g_prova = lm(Happiness.Score ~ ., data=Data)
summary(g_prova)
shapiro.test(g_prova$residuals)
plot(g_prova, which=1, pch=16)
plot(g_prova, which=2, pch=16)
influencePlot(g_prova, id.method = "identify", main = "influential Plot",
sub = "Circle size is proportial to Cook's Distance")
Data=Data[-c(148,149,152),]
g = lm(Happiness.Score ~ ., data=Data)
summary(g)
shapiro.test(g$residuals)
plot(g, which=1, pch=16)
plot(g, which=2, pch=16)
influencePlot(g, id.method = "identify", main = "influential Plot",
sub = "Circle size is proportial to Cook's Distance") # fors√©meglio non fare vedere
####### 3 #######
library(MASS)
library(ggplot2)
library(GGally)
library(rio)
library(leaps)
library(car)
library(dplyr)
####### 1 #######
Data=import("C:/Users/teobo/Desktop/3_6_Inferenza/ProgettoR_Latex/TEH_World_Happiness_2019_Imputed.xlsx")
Data$Continent=NULL
head(Data)
summary(Data)
str(Data)
Data$Country=NULL # = alla mia y
Data$Year=NULL #irrilevante
Data$Happiness.rank=NULL
ggpairs(data = Data, title ="Relationships between predictors & response",
lower = list(continuous=wrap("points", alpha = 0.5, size=0.1)))
####### 2 #######
g_prova = lm(Happiness.Score ~ ., data=Data)
summary(g_prova)
shapiro.test(g_prova$residuals)
plot(g_prova, which=1, pch=16)
plot(g_prova, which=2, pch=16)
influencePlot(g_prova, id.method = "identify", main = "influential Plot",
sub = "Circle size is proportial to Cook's Distance")
Data=Data[-c(148,149,152),]
g = lm(Happiness.Score ~ ., data=Data)
summary(g)
shapiro.test(g$residuals)
plot(g, which=1, pch=16)
plot(g, which=2, pch=16)
influencePlot(g, id.method = "identify", main = "influential Plot",
sub = "Circle size is proportial to Cook's Distance") # fors√©meglio non fare vedere
####### 3 #######
AIC( g )
step( g, direction = "backward" , trace = T)
AIC( g )
g2 = update(g, . ~ . - Generosity) #Statisticamente irrilevante
shapiro.test(g2$residuals)
AIC( g2 )
AIC( g3 )
BIC( g )
BIC( g2 )
BIC( g3 )
BIC( g )
g2 = update(g, . ~ . - Generosity) #Statisticamente irrilevante
g3 = update(g2, . ~ . - Healthy.life) #Poco rilevante
BIC( g3 )
